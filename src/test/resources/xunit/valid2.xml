<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<assemblies>
  <assembly name="R:\Bau.Test.Unit.dll" environment="64-bit .NET 4.0.30319.34209" test-framework="xUnit.net 1.9.2.1705" run-date="2014-11-14" run-time="22:37:36" total="45" passed="28" failed="5" skipped="10" time="1,009" errors="2">
    <errors />
    <collection total="28" passed="28" failed="0" skipped="0" name="xUnit.net v1 Tests for R:\Bau.Test.Unit.dll" time="1,009">
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.0005, expected: &quot;500 ns&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,371" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.005, expected: &quot;5 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.05, expected: &quot;50 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.5, expected: &quot;500 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5, expected: &quot;5 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 50, expected: &quot;50 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 500, expected: &quot;500 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5000, expected: &quot;5 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 50000, expected: &quot;50 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 500000, expected: &quot;8 min 20 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5000000, expected: &quot;83 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 50000000, expected: &quot;833 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 500000000, expected: &quot;8,333 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.000567, expected: &quot;567 ns&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.00567, expected: &quot;5.67 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.0567, expected: &quot;56.7 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 0.567, expected: &quot;567 µs&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5.67, expected: &quot;5.67 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 56.7, expected: &quot;56.7 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 567, expected: &quot;567 ms&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5670, expected: &quot;5.67 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 56700, expected: &quot;56.7 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 480000, expected: &quot;8 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 567000, expected: &quot;9 min 27 s&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 56700000, expected: &quot;945 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 567000000, expected: &quot;9,450 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
      <test name="BauCore.Test.Unit.DoubleExtensionsTheories.FractionalMillisecondsCanBeHumanized(milliseconds: 5670000, expected: &quot;95 min&quot;)" type="BauCore.Test.Unit.DoubleExtensionsTheories" method="FractionalMillisecondsCanBeHumanized" time="0,000" result="Pass" />
    </collection>
    <collection>
      <test name="BauCore.Test.Unit.BauScriptPackFacts.CanInitializeWhenScriptArgsAreNull" type="BauCore.Test.Unit.BauScriptPackFacts" method="CanInitializeWhenScriptArgsAreNull" time="0,638" result="Pass" />
    </collection>
  </assembly>
</assemblies>
